apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "appname.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "appname.fullname" . }}
    app.kubernetes.io/version: "{{ include "appname.version" . }}"
    app.kubernetes.io/managed-by: "helm"
    helm.sh/chart: {{ include "appname.name" . }}-{{ include "appname.release" . }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "appname.fullname" . }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "appname.fullname" . }}
        image.version: {{ .Values.image.version | quote }}
    spec:
      volumes:
      - name: script
        configMap:
          defaultMode: 0700
          name: {{ include "appname.fullname" . }}
      - name: config
        emptyDir: {}
      imagePullSecrets:
      - name: {{ .Values.global.imagecredentials.registry | quote }}
      initContainers:
        - name: config-generate
          image: "alpine"
          imagePullPolicy: {{ .Values.global.image.pullPolicy }}
          command:
          - /bin/entrypoint.sh
          volumeMounts:
          - name: config
            mountPath: /etc/appname
          - name: script
            mountPath: /bin/entrypoint.sh
            readOnly: true
            subPath: entrypoint.sh
      containers:
        - name: {{ include "appname.fullname" . }}
          image: {{ printf "%s/%s:%s" .Values.global.imagecredentials.registry .Values.image.path .Values.image.version | quote }}
          imagePullPolicy: {{ .Values.global.image.pullPolicy }}
          ports:
            - name: {{ include "appname.name" . }}
              containerPort: {{ .Values.static_env.HTTP_PORT }}
              protocol: TCP
          env:
            {{- range $key, $value := .Values.static_env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "appname.fullname" . }}
                  key: DB_PASSWORD
            - name: MQ_TOPICIN
              value: {{ .Values.env.MQTOPICIN | quote }}
            - name: MQ_TOPICOUT
              value: {{ .Values.env.MQ_TOPICOUT | quote }}
            - name: MQ_TOPICSYNC
              value: {{ .Values.env.MQ_TOPICSYNC | quote }}
            - name: MQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "appname.fullname" . }}
                  key: MQ_PASSWORD
